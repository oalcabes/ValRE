
ValRE EDITS
===========

THIS DOCUMENT HAS NOTES FOR ANYONE WHO MAY HAVE TO ALTER THE ValRE CODE. READ BELOW IF ValRE
IS NOT WORKING CORRECTLY AND YOU NEED TO EDIT IT.

what my code does:
- reads in names of all available model output files
- extracts files between given start and end dates
- extracts values from model output for each date
- checks if there's observational output for each model date, and if there isn't goes into the GOES database and extracts it
- extracts corresponding values from observational output for each given model output
- compares observed and forecasted all clear to generate metrics
- uses other values (ex. peak intensity, forecast probabilities, etc.) to create verification graphs
- prints reports in PDF and/or JSON formats
  - note: plots are included in the PDF report, but not in the JSON report. Individual PNG files of plots can be found in the
  validation_reports/figures folder.

ValRE Assumptions
=================
- all output files have some string of the date in them in the forms: YYYY-MM-DD or YYYY_MM_DD
- all output files are in the JSON form created by the CCMC (this example format can be found in
  ref_files/example_sepscoreboard_json_file_v20190228.json - however, please do not move/alter this file from its current directory as     ValRE may need to read it in. If you need to use it please just copy it)
- if an observed event starts before midnight but the model doesn't pick it up until after midnight, ValRE will interpret
  such an event as one miss and one hit as opposed to one late hit. If you know about such an event, I suggest merging the two files
  into one, which should fix the problem
- ValRE currently has no capability for an event in which the primary GOES instrument changes mid-event. It may crash or read
  the observed data incorrectly (although it's possible the code would still run fine, but check it). In order to account for such an   
  event, it may make sense to manually input the backup instrument.
- all observation files ValRE creates are daily. If you have multiple model files for an individual day and an event starts in the       
  evening, so some model files from the morning say all clear whereas model files in the evening do not, the morning model files will be 
  read as "misses" because the observation file considers the entire day not clear. The best way to handle this problem would either be 
  to merge model files into days, or to create your own observation files that correspond to the model files.

Likely Edits
============
1. NOT LOADING IN FILES CORRECTLY: There are a few things you may need to change in the code if it isn't loading in your files 
correctly, and you can't just change your output files.
   a. INPUT FILES: to load in your input files, you may need to change the format of the datestring that is in the file name. If
   it is necessary to change this in the actual code as opposed to just changing your files, you can edit the date_range function
   lines:
        d2_str1 = str(d2)
        d2_str2 = d2.strftime('%Y_%m_%d')
        # print(d2)
        for f in all_files:
            if d2_str1 in str(f) or d2_str2 in str(f):
    If you need to add a new date format, simply create d2_str3 = d2.strftime('your new format'), and append the line
    if d2_str1 in str(f) or d2_str2 in str(f): --> if d2_str1 in str(f) or d2_str2 in str(f) or d3_str3 in str(f):
    b. OUTPUT FILES: Similarly to input files, if you're having problems loading your output files and need to change the form of the
    datestring, you can alter the following lines in the main function of the code:    
        if str(mod_start_time.date()) in str(obs_files) or mod_start_time.strftime('%Y_%m_%d') in str(obs_files):
           for obs_f in obs_files:
               if str(mod_start_time.date()) in str(obs_f) or mod_start_time.strftime('%Y_%m_%d') in str(obs_f):
     and again, you can just add another or statement in both if statements with"
          mod_start_time.strftime(your format) in str(obs_f)
2. DETECT PREVIOUS EVENT VALUE: This is an input value for the operational_sep_quantities.py module. For most ValRE purposes, the detect
previous event value can be set to false, as most events that ValRE uses do not occur right after each other. However, for such an
event, if it is necessary to go into the GOES database to retrieve observational data, it may be necessary to change the detect previous
event value to True. ValRE does not currently have a way to automate this, and it may be necessary to validate that particular event
manually. If you need to add in an automation, you can edit the function database_extraction and change the input in the function
sep.run_all from cfg.detect_previous_event to your own value.
3. UPDATES TO operational_sep_quantities.py: If there is a new version of operational_sep_quantities.py, you can replace the old copy of
the file in the ValRE folder with the new copy. However, if the inputs or outputs to the function have changed, it may be necessary to
alter the way ValRE incorporates the code accordingly.
    a. CHANGES TO INPUT: Most alterations to the input can be made in the database_extraction function in the ValRE.py code, before the
    sep.run_all command is run.
    b. CHANGES TO OUTPUT: The current output files of operational_sep_quantities.py (as of July 2019) are csv documents with various 
    important values. The function (located in the ValRE folder) output_to_json.py includes a function called obs_csv2json, which loads 
    in all of the values from the csv files and reformats them into the JSON format given by the CCMC. If the output of 
    operational_sep_quantities.py changes or has problems, these observational JSON files may be created incorrectly. Therefore, it may 
    be necessary to edit the obs_csv2json function directly to make sure all of the values are correctly loaded into JSON.
  
  
 some ideas for new things I could do with ValRE
 ===============================================
 - do some calculations w peak intensity differences
 - make it possible to add to a previous validation report by adding all the hits and misses from a previous report to a new one
 - add a skip dates option
